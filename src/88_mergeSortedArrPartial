#!/bin/python3

#88. Merge Sorted Array (See EPIP 13.2 solution)
# Given two sorted integer arrays nums1 and nums2, merge nums2 into nums1 
# as one sorted array.

'''class Solution(object):
	#Shift right solution is O(MN) in worst case
	def merge(self, nums1, m, nums2, n):
		"""
		:type nums1: List[int]
		:type m: int
		:type nums2: List[int]
		:type n: int
		:rtype: void Do not return anything, modify nums1 in-place instead.
		"""				
		
		#Make sure nums1 is larger
		if len(nums2)> len(nums1):
			nums1, num2 = num2, nums1
			m,n = n, m
		
		if not nums1:
			nums1 = nums2
		
		if not nums2:
			return 
				
		p2 = 0		
		for i in range(0, len(nums1)):
			print("Reading:", p2, nums1[i])
			if nums2[p2]<=nums1[i]:
				last_read = nums1[-1]
				nums1[i:] = nums1[:-1] #Shift right
				#print("Shift right:", nums1)
				nums1.append(last_read)
				nums1[i]=nums2[p2]
				p2+=1
				if p2==len(nums2):
					break
							 
			
		while p2<len(nums2):
			nums1.append(nums2[p2])
			p2+=1
'''
					
def main():

	sol = Solution()
	nums1 = [1,4,5,8,10]	
	nums2 = [0,1,11,12]
	nums1 = [2,0]
	nums2 = [1] 
	#LEft shift
	#nums1[:-1] = nums1[1:]
	#Right shift
	#nums1[1:] = nums1[:-1]
	sol.merge(nums1,len(nums1), nums2,len(nums2))
	print("merged", nums1)
	
if __name__=="__main__":main()
