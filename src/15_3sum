#!/bin/python3

# Given an array of sorted integers, return indices of the two numbers 
# such that they add up to a specific target.
#Time is O(N), space is O(1)
### INCOMPLETE.....
class Solution:
	
	def threeSum(self, nums):
	
		"""
        	:type nums: List[int]
        	:type target: int
        	:rtype: List[int]
		"""
		result = []
		for i in nums:
			r = self.twoSum(nums)
			if r ==0 :
				result.append([i, r[0], r[1]])				
		return result
					
	def twoSum(self, nums):
	
		start = 0
		end = len(nums) - 1
		target = 0
		
		while start<end:
			#print(start, end)
			if target == nums[start] + nums[end]:
				return [nums[start], nums[end]]
			elif target<nums[start] + nums[end]:
				end-=1
			else:
				start+=1
		return []		
	
def main():

	print ("3 sum")
	sol = Solution()
	nums = [-1, 0, 1, 2, -1, -4]	
	nums.sort()
	#print(nums)
	result = sol.threeSum(nums)
	print(result)
	
if __name__=="__main__":main()
